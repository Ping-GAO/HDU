/*
* main.cpp
*
*  Created on: Dec 18, 2017
*      Author: gary9
*/



#include <iostream>
using namespace std;
char matrix[100][100];
void print_matrix(int length, int width);
void DFS(int i, int j, int length, int width);
int main() {
    int length, width;

    while (cin >> length >> width && width && length) {
        int i, j;
        int cnt = 0;
        for (i = 0; i < length; i++) {
            for (j = 0; j < width; j++) {
                cin >> matrix[i][j];
            }
        }
        //print_matrix(length,width);
        for (i = 0; i < length; i++) {
            for (j = 0; j < width; j++) {
                if (matrix[i][j] == '@') {
                    cnt++;
                    //cout << cnt - 1 << endl;
                    DFS(i, j, length, width);
                    //print_matrix(length, width);
                }
            }
        }

        cout << cnt << endl;
    }



    return 0;
}

void print_matrix(int length, int width) {
    int i, j;
    cout << "Print matrix:" << endl;
    for (i = 0; i < length; i++) {
        for (j = 0; j < width; j++) {
            cout << matrix[i][j];
        }
        cout << endl;
    }
}

void DFS(int i, int j, int length, int width) {
    // i,j are point corrdinate
    if (i < 0 || i >(length - 1) || j < 0 || j>(width - 1)) {

        return;
    }
    matrix[i][j] = '*';
    int a, b;
    for (a = -1; a <= 1; a++) {
        for (b = -1; b <= 1; b++) {
            if (a == 0 && b == 0) {
                ;
            }
            else if (matrix[i + a][j + b] == '@') {

                DFS(i + a, j + b, length, width);
            }
        }
    }



}
